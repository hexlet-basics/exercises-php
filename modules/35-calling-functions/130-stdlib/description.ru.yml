---

name: Стандартная библиотека
theory: |

  PHP, как и любой другой язык, поставляется с набором полезных функций. Все вместе они составляют так называемую **стандартную библиотеку**. В неё обычно входят тысячи функций, которые невозможно выучить — этого и не нужно делать. Подразумевается, что любой программист знает, где искать документацию по ним и примерно представляет себе, чего он хочет достичь. А дальше — дело техники. Программировать без интернета крайне сложно.

  Для новичков эта информация часто выглядит так: «Сходи туда, не знаю куда, принеси то, не знаю что». То есть непонятно как узнавать про эти функции, когда ты ничего не знаешь вообще. Как ни странно, не существует способа раз и навсегда познать всё, что нужно познать. Любой разработчик в процессе своего профессионального взросления знакомится со всё более интересными функциями, решающими его задачи более элегантно, и таким образом пополняет свой арсенал.

  Вот некоторые советы, как узнавать о новых функциях:

  * Всегда чётко отслеживайте, с чем вы сейчас работаете (какой тип данных). Почти всегда вы найдете необходимую функцию в соответствующем разделе документации, например, для работы со строками нужно изучать строковые функции.
  * Периодически открывайте раздел со стандартными функциями по изучаемой тематике и просто пробегайтесь по ним, изучая сигнатуры и способы использования.
  * Чаще читайте чужой код, особенно код библиотек которые вы используете. Он весь доступен на GitHub.

  Ещё одна особенность функций PHP из стандартной библиотеки в том, что они *доступны глобально*. Другими словами, вы можете вызывать их в любом месте вашей программы (это не работает так с функциями, написанными самостоятельно). Большинство функций стандартной библиотеки сосредоточено вокруг какой-то функциональности или какого-то типа данных. Например, есть большой блок функций по обработке строк, по работе с числами и так далее. По некоторым из них мы пройдемся в процессе обучения.


instructions: |

  Функция `gettype` позволяет определить тип передаваемого аргумента. Название типа возвращается в виде строки. Например, вызов `gettype(10)` вернет строку `"integer"` (integer — целое число).

  Выведите на экран тип значения переменной `$motto`.

tips:
  - |
    [Справочник функций PHP](http://php.net/manual/ru/funcref.php)

definitions:
  - name: Стандартная библиотека
    description: "набор полезных функций, входящий в комплект поставки языка программирования."
