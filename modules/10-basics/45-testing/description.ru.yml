---

name: Как мы проверяем ваши решения
theory: |

  Наш сайт автоматически проверяет ваши решения. Как это работает?

  В самом простом случае, система просто запускает код и смотрит на то, что вывелось на экран. А потом сверяет с тем, что мы «ожидали» по заданию.

  В следующих, более сложных уроках вы будете писать функции — некие мини-программы, принимающие информацию из внешнего мира и производящие какие-то операции. Проверка ваших решений в таких случаях выглядит немного сложнее: система запускает ваше решение и передаёт какую-то информацию. Система также знает — «ожидает» — какой именно ответ должна дать правильная функция при таких входных данных.

  Например, если ваша задача — написать функцию сложения двух чисел, то проверочная система будет передавать ей разные комбинации чисел и сверять ответ вашей функции с реальными суммами. Если во всех случаях ответы совпадут, то решение считается верным.

  Такой подход называется тестированием, и он используется в реальной повседневной разработке. Обычно программист сначала пишет тест — проверочную программу, а потом уже ту программу, которую хотел написать. В процессе он постоянно запускает тесты и смотрит, приблизился ли он к решению.

  Именно поэтому наш сайт говорит «Тесты пройдены», когда вы правильно решили задачу.

  Вот простой пример: необходимо распечатать строку `Hello, World!`. Предположим, вы допустили небольшую ошибку, и функция вывела на экран другое значение. Система ответит примерно так:

  <pre class='hexlet-basics-output'>
    -'Hello, World!'
    +'ello, World!'

    FAILURES!
    Tests: 1, Assertions: 1, Failures: 1.
  </pre>

  На экране появляется подсказка. На ней знаком `+` обозначено то, что распечатал ваш код. Знаком `-` – то, что ожидалось. Сравнивая эти два значения, можно увидеть ошибку. В примере выше видно, что в выводе пропущена буква _H_.

  Кроме наших тестов, будет крайне полезно экспериментировать с кодом. Для этого можно ипользовать сервис [repl.it](https://repl.it/languages/php).  Идеально, если вы выполните самостоятельно весь код, который присутствует в уроках.

  ---

  Иногда в процессе решения будет казаться, что вы сделали все правильно, но система "капризничает" и не принимает решение. Подобное поведение практически исключено. Нерабочие тесты просто не могут попасть на сайт, они автоматически запускаются после каждого изменения. В подавляющем большинстве таких случаев, (а все наши проекты в сумме провели миллионы проверок за много лет), ошибка содержится в коде решения. Она может быть очень незаметной, вместо английской буквы случайно ввели русскую, вместо верхнего регистра использовали нижний или забыли вывести запятую. Другие случаи сложнее. Возможно ваше решение работает для одного набора входных данных, но не работает для другого. Поэтому всегда внимательно читайте условие задачи и вывод тестов. Там почти наверняка есть указание на ошибку.

  Однако, если вы уверены в ошибке или нашли какую-то неточность, то вы всегда можете указать на неё. В конце каждой теории есть ссылка на содержимое урока на гитхабе (этот проект полностью открытый!). Перейдя туда, вы можете написать issue, посмотреть содержимое тестов (там видно, как вызывается ваш код) и даже отправить pullrequest. Если для вас это пока тёмный лес, то подключитесь в наше сообщество, там в канале _#hexlet-feedback_ мы всегда поможем.


instructions: |
  Выведите на экран `9780262531962`.

definitions:
  - name: Тесты
    description: |
      специальный код, проверяющий программы на корректность, сверяя правильный результат с реальным.

tips:
  - |
    [TDD](https://ru.wikipedia.org/wiki/Разработка_через_тестирование)
