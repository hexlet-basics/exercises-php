---

name: Операторы
theory: |

  Перед тем, как двигаться дальше, разберем базовую терминологию. Знак операции, такой как `+`, называют **оператором**. Оператор — просто символ, который производит некоторую операцию. Как вы узнаете далее, операторы бывают не только арифметическими.

  ```php
  <?php

  print_r(8 + 2);
  ```

  В этом примере `+` это оператор, а числа `8` и `2` — это **операнды**.

  В случае сложения у нас есть два операнда: один слева, другой справа от знака `+`. Операции, которые требуют наличия двух операндов, называются **бинарными**. Если пропустить хотя бы один операнд, например, так `3 + ;`, то программа завершится с синтаксической ошибкой.

  _Операции бывают не только бинарными, но и унарными (с одним операндом) и даже тернарными (с тремя операндами)!_

  Символы _+_ и _-_ используются не только как операторы. Когда речь идет про отрицательные числа, то знак минуса становится частью числа:

  ```php
  <?php

  print_r(-3); // => -3
  // То же самое что и 4 - 3
  print_r(4 + -3); // => 1
  ```

  То же самое касается плюса:

  ```php
  <?php

  print_r(+3); // => 3
  print_r(1 + +3); // => 4
  ```

instructions: |

  Напишите программу, которая посчитает разность между `6` и `-81` и выведет ответ на экран.

definitions:
  - name: "Арифметическая операция"
    description: "сложение, вычитание, умножение и деление."
  - name: "Оператор"
    description: "специальный символ, создающий операцию. Например, `+` создает операцию сложения."
  - name: "Операнд"
    description: "объект, который участвует в операции. `3 * 6`: здесь 3 и 6 — операнды."
  - name: "Унарная операция"
    description: "операция с одним операндом. Например, `-3` — унарная операция для получения числа, противоположного числу три."
  - name: "Бинарная операция"
    description: "операция с двумя операндами. Например, `3 + 9`."
